@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";
@import "@splidejs/splide/dist/css/splide.min";
@import url("https://fonts.googleapis.com/css2?family=Nunito+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&family=Rubik:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap");

@layer base {
    html {
        font-family: "Nunito Sans", sans-serif;
        @apply text-gray-600;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-family: "Rubik", sans-serif;
        @apply m-0 font-medium leading-tight;
    }

    h1 {
        @apply text-5xl;
    }

    h2 {
        @apply text-4xl;
    }

    h3 {
        @apply text-3xl;
    }

    h4 {
        @apply text-2xl;
    }

    h5 {
        @apply text-xl;
    }

    h5 {
        @apply text-base;
    }

    p {
        @apply mb-4;
    }

    hr {
        @apply my-4;
    }

    ul {
        @apply list-disc list-inside;
    }

    ol {
        @apply list-decimal list-inside;
    }
}

@layer components {
    .btn-primary {
        @apply px-4 py-2 font-semibold text-white bg-blue-500 rounded-lg shadow-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-75;
    }
    .nav-link {
        @apply px-3 py-2 text-base font-medium text-white transition duration-300 ease-out border-b-2 border-transparent hover:border-brand-purple-500;
    }
    .vertical-lr {
        writing-mode: vertical-lr;
        text-orientation: upright;
    }
    .vertical-rl {
        writing-mode: vertical-rl;
    }
    .text-justify-last {
        text-align-last: justify;
        text-orientation: upright;
    }
    .checkbox-brand-purple-500 {
        @apply text-brand-purple-100 bg-gray-100 border-gray-300 rounded ring-brand-purple-500  hover:[&:not(:focus)]:ring-1 focus:ring focus:ring-brand-purple-500;
    }
    .checkbox-brand-purple-500:checked {
        background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='rgb(105, 43, 226)' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
    }

    .faqItem-cascaded{
        @apply rounded-b-lg;
    }
    .faqItem-cascaded > i{
        @apply rotate-180;
    }
    .faqItem-cascaded + div{
        @apply hidden;
    }

    .lovestory-pagination, .lovestory-progress-bar{
        @apply !rounded-[50px];
        @apply !bg-gray-500;
        @apply !mx-1;
        @apply !opacity-25;
        @apply !w-3;
        @apply !h-3;
    }
    .lovestory-pagination.is-active, .lovestory-progress-bar{
        @apply !mx-3;
        @apply !w-9;
    }
    .lovestory-progress-bar {
        @apply !w-0;
        @apply !m-0;
        @apply !opacity-100;
        @apply !bg-white;
    }

    .lovestory-pagination.is-active .lovestory-progress-bar {
        @apply !w-9;
        transform-origin: center;
        animation: lovestory-animation 3s linear forwards;
    }

    [aria-live='polite']~ul li button .lovestory-progress-bar {
        animation: lovestory-animation-pause .3s linear forwards !important;
    }

    @keyframes lovestory-animation {
        from{transform: scaleX(.25);}
        to {transform: scaleX(1);}
    }
    @keyframes lovestory-animation-pause {
        from{transform: scaleX(.25);}
        to {transform: scaleX(1);}
    }
}
